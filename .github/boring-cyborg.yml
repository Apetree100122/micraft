##### Labeler ##########################################################################################################
# Enable "labeler" for your PR that would add labels to PRs based on the paths that are modified in the PR.
labelPRBasedOnFilePath:
    1.12.x:
        - "projects/1.12.2/**"

    1.16.x:
        - "projects/1.16/**"
        - "projects/1.16-fabric/**"
        
    1.18.x:
        - "projects/1.18/**"
        - "projects/1.18-fabric/**"
    
    1.19.x:
        - "projects/1.19/**"
      # - "projects/1.19-fabric/**"
    
    Forge:
        - "projects/1.12.2/**"
        - "projects/1.16/**"
        - "projects/1.18/**"
        - "projects/1.19/**"
    
    Fabric:
        - "projects/1.16-fabric/**"
        - "projects/1.18-fabric/**"
      # - "projects/1.19-fabric/**"
      
    Patchouli:
        - "projects/**/patchouli_books/**"

    source:
        - "src/**"

    小语种:
        - "projects/**/assets/**/**/lang/de_**.json"
        - "projects/**/assets/**/**/lang/it_it.json"
        - "projects/**/assets/**/**/lang/ko_kr.json"
        - "projects/**/assets/**/**/lang/ja_jp.json"
        - "projects/**/assets/**/**/lang/es_**.json"
        - "projects/**/assets/**/**/lang/fr_**.json"
        - "projects/**/assets/**/**/lang/ru_ru.json"
        - "projects/**/assets/**/**/lang/ar_sa.json"
        - "projects/**/assets/**/**/lang/bg_bg.json"
        - "projects/**/assets/**/**/lang/pt_**.json"
        - "projects/**/assets/**/**/lang/de_**.lang"
        - "projects/**/assets/**/**/lang/it_it.lang"
        - "projects/**/assets/**/**/lang/ko_kr.lang"
        - "projects/**/assets/**/**/lang/ja_jp.lang"
        - "projects/**/assets/**/**/lang/es_**.lang"
        - "projects/**/assets/**/**/lang/fr_**.lang"
        - "projects/**/assets/**/**/lang/ru_ru.lang"
        - "projects/**/assets/**/**/lang/ar_sa.lang"
        - "projects/**/assets/**/**/lang/bg_bg.lang"
        - "projects/**/assets/**/**/lang/pt_**.lang"

# Various Flags to control behaviour of the "Labeler"
labelerFlags:
    # If this flag is changed to 'false', labels would only be added when the PR is first created and not when existing
    # PR is updated.
    # The default is 'true' which means the labels would be added when PR is updated even if they were removed by the user
    labelOnPRUpdates: true

##### Greetings ########################################################################################################
# Comment to be posted to welcome users when they open their first PR
firstPRWelcomeComment: |
    你已成功发送你在 CFPA 仓库的第一个 Pull Request！请再次检查以下事项：
    标题是否正确丨翻译文件的路径是否正确丨检查单是否勾选了前三项。
    确认无误后请耐心等待审阅，并在审阅人提出意见给出答复或修改内容。

# Comment to be posted to congratulate user on their first merged PR
firstPRMergeComment: >
    干得好！你在 CFPA 的第一份翻译已成功入库，将在次日通过自动汉化更新模组分发给广大玩家。

# Comment to be posted to on first time issues
# firstIssueWelcomeComment: >
#     感谢你来反馈问题。请在反馈前后检查是否有相同的问题。

###### Title Validator #################################################################################################
# Verifies if commit/PR titles match the regexp specified
verifyTitles:
    # Regular expression that should be matched by titles of commits or PR
    titleRegexp: ^(\[[A-Z,]{1,}\]|[\u4e00-\u9fa5]*|)\s*[A-Za-z\s]+\s*[\u4e00-\u9fa5]*.*$
    # If set to true, it will always check the PR title (as opposed to the individual commits).
    alwaysUsePrTitle: true
    # If set to true, it will only check the commit in case there is a single commit.
    # In case of multiple commits it will check PR title.
    # This reflects the standard behaviour of Github that for `Squash & Merge` GitHub
    # uses the PR title rather than commit messages for the squashed commit ¯\_(ツ)_/¯
    # For single-commit PRs it takes the squashed commit message from the commit as expected.
    #
    # If set to false it will check all commit messages. This is useful when you do not squash commits at merge.
    validateEitherPrOrSingleCommitTitle: true
    # The title the GitHub status should appear from.
    statusTitle: "标题检测器"
    # A custom message to be displayed when the title passes validation.
    successMessage: "你的标题是正确的，感谢你的配合。"
    # A custom message to be displayed when the title fails validation.
    # Allows insertion of ${type} (commit/PR), ${title} (the title validated) and ${regex} (the titleRegexp above).
    failureMessage: "错误的${type}标题：${title}。请检查是否符合“模组英文名+简要说明”的格式"

    ###### PR/Branch Up-To-Date Checker ####################################################################################
# Check if the branch is up to date with master when certain files are modified
checkUpToDate:
    # The default branch is "master", change the branch if you want to check against a different target branch
    targetBranch: main
    files:
        # File paths that you want to check for
        # In this example, it checks if the branch is up to date when alembic migrations are modified in the PR.
        # It helps avoid multiple heads in alembic migrations in a collaborative development project.
        - .github/**
        - config/**
